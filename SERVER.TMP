trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
if [ ! -d "COMMANDS" ]; then
echo "Making commands folder..."
    mkdir "COMMANDS"
fi
echo "Re-installing commands, this happens every session."
echo "Please wait..."
echo 'echo "Command list:
    clear
    restart
    sed
    echo
    quit
    crashtest
    listfile
    log
    update
    Beta command list:
    app"' > COMMANDS/listMCMDB.sh
    echo 'echo "Command list:
    clear
    restart
    sed
    echo
    quit
    crashtest
    log
    update"' > COMMANDS/list.sh
    echo 'echo "Logs have been deprecated and will be removed soon."' > COMMANDS/log.sh
echo 'echo "Logs have been deprecated and will be removed soon."' > COMMANDS/errorlog.sh
echo 'echo "Logs have been deprecated and will be removed soon."' > COMMANDS/infolog.sh
echo 'echo "Logs have been deprecated and will be removed soon."' > COMMANDS/warninglog.sh
echo 'echo "Logs have been deprecated and will be removed soon."' > COMMANDS/clearlog.sh
echo 'echo "OMG LIGHTNING MCQUEEN SLAYYYY GIRLIE OMGGGGGGGGGGGG
                                                              ............--                         
                                                     .....-++###++++++++##-..             ------     
                                              ...---++#++-------..   ..----+-......--------------    
                                           .--++++----------              .++.......--------------   
                                          -+----++-.                        +-.......+-------------  
                                         ---+-                    .-.       .+.. .........-..... .-  
                                        +++.        .+###-      +####-       +-...........-..... ... 
                                       +-..         -####.      --++.        -+..........-...... ... 
                                      +-..           .-. ....................  .--. ....        ..#+ 
                                    .++.....-..............----.....-------....---.  ...       ..-## 
                     . ............... ....--.------------....----------------+###-.... - .   .+.-## 
                  ...-.........--..-------------------------------. .--------+#####. .-  ..  ....+## 
                ...--..-----------------------------------------. ..---------++####-. -   .......+#+ 
               ----------------------------------------.-. -+--...---------.-.-.-+++.-.   -+--+-.#+- 
              +--.--..-------------------------..---------------------------+++--..++-.-- .---.--##- 
             #+-----+. -----------------------------+++++++--------------+++######+-.+++- .-+-+--### 
            ##+-------++++++++------------------+++++++++###++---+++---+++++##########++.+----++###+ 
           ###++++++++++####+++++++++++++++###+++------+##+-++++++++++++++++###########++++#.-++#+++ 
           ###+++++++++++###-----------------....--+####-----++++++++++++++########+####+++-+++#+++- 
          +###+++++++++++#####+++++++++++############+-------++++++++++++++#+###########++++++##+++- 
           ####++++++++++++####################++++++-------+++++++++++++++#+++#####+###++######+-#+ 
           ####+++++++---+++-+--.......--..----+++++--+++++++++++++++++++++#++##++++############-+#+ 
           #####+++++++++++++++++-------++++++++++++++++++++++++++++++++++----##++++#+.+#########-+- 
            #####+++++++++++++++++++++++++++++++++++++++++++++++++++++++++-##+-++++##-+###########+  
             #####+++++++++++++++++++++++++++++++++++++++++++++++######+++----++-+#+..############   
               #########+++++++++++++++++++++++++++####################+ .+#+++#++- +##              
       ##################################################################+. -.- -.-##                
    #########################################################################++#####                 
     #############################################################################                   
                     ###############################################"' > COMMANDS/IAMSPEED.sh
echo 'echo "NOTE: This only works on a Windows system!"
psc=0
read -p "Powershell command:" psc 2>/dev/tty
powershell -command "$psc"' > COMMANDS/powershell.sh
echo 'read -p "What file would you like to see the contents of? " sedfile 2>/dev/tty
sed '' "$sedfile"
echo ""' > COMMANDS/sed.sh
exec 2>/dev/null
rm "save.sh"
crashed=0
file="CONFIG/INFO.TXT"
file2="CONFIG/MCMDB.txt"
rec=0
touch RECOVERY_SCRIPT.SH
curl -s -H "Cache-Control: no-cache" https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/RECOVERY_SCRIPT.SH > RECOVERY_SCRIPT.SH
./RECOVERY_SCRIPT.SH &

crashSYS() {
  trap - EXIT
  printf "\033[10;40H\e[1mSILENT OS\e[0m
Silent OS' kernel has encountered an error, 
and has shut down to prevent further errors.
This normally isn't an issue and you can reboot, if this is the first time.
If this isn't your first time having this screen, you may need to re-install.
You may contact 'skibiditoiletcumrocket67' on Discord for support.
\e[1mTHIS DOES REQUIRE A FULL RELOAD OF THE SYSTEM.\e[0m
"
  echo "KERNEL ERROR CODE: $code"
  read -p "Press Enter to restart" 2>/dev/tty
  clear
  printf "${RED}Restarting...${NOCOLOR}"
  clear
  touch save.sh
  echo "./e.sh" > save.sh
  ./save.sh
}


crash() {
printf "\033[10;40H\e[1mSILENT OS\e[0m

Silent OS has encountered an error, and has shut down to pervent further errors.
This normally isn't an issue and you can reboot, if this is the first time.
If this isn't your first time having this screen you can try the following:
- Reinstalling via the same source you have installed it from
- Finding the cause of the error by its error code
- Contacting 'skibiditoiletcumrocket67' on Discord for support

"
if [ $cmd == "sed" ]; then
if [[ ! -e "$file" ]]; then
echo "This was caused by a request that was too big, however one or more config files was not found.
They will be re-installed on boot."
elif [[ ! -e "$file2" ]]; then
echo "This was caused by a request that was too big, however one or more config files was not found.
They will be re-installed on boot."
else
echo "ERROR CODE: REQUEST TOO BIG"
fi
elif [ $cmd == "crashtest" ]; then
if [[ ! -e "$file" ]]; then
echo "This was caused by a crash test, however one or more config files was not found.
They will be re-installed on boot."
elif [[ ! -e "$file2" ]]; then
echo "This was caused by a crash test, however one or more config files was not found.
They will be re-installed on boot."
else
echo "ERROR CODE: CRASH TEST"
fi
else
echo "Unknown error, reinstalling Silent OS is likely your best option."
fi
echo "<ERROR> The file read request was too big. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> The file read request was too big. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
read -p "Press Enter to restart" 2>/dev/tty
printf "\033[H"
  clear
    printf "${RED}Restarting...${NOCOLOR}"
   clear
       ((crashed++))
    if [ "$crashed" -ge 5 ]; then
        recovery
    fi
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
e
ON
}
val_opt=0
VALIDATION_FAILED() {
  rm downloaded.tmp
  clear
  echo "Your system differs from the current standard version.
This is likely due to using an outdated version of Silent OS.
NOTE: This feature is still buggy, it is not perfect.
Please choose a boot option:
1) Update the system
2) Continue launching
3) Terminate this instance"
read -n1 -s val_opt
if [[ "$val_opt" != "1" && "$val_opt" != "2" && "$val_opt" != "3" ]]; then
VALIDATION_FAILED
elif [ $val_opt == 1 ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
cat SERVER.TMP > e.sh | rm SERVER.TMP
touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
clear
elif [ $val_opt == 2 ]; then
echo "Press Enter to continue..."
elif [ $val_opt == 3 ]; then
exit 0
fi
}
VALIDATION_FUNCTION() {
    echo "Validating system...
    "
curl -s -H "Cache-Control: no-cache" https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP > downloaded.tmp
        cmp downloaded.tmp e.sh && echo "System check complete, continuing..." || VALIDATION_FAILED
        rm downloaded.tmp
}
chmod -R 777 .
VALIDATION_FUNCTION



recovery() {
    clear
    printf "\e[44m"  
    clear
    printf "\e[97m\e[1mRecovery\n"  
    printf "\e[0m"
    printf "\e[44mSilent OS has crashed five (or more) times in this session.
Here are some recovery options:

1) Reboot and try again
2) Disable MCMDB Mode (If it's on) and restart
3) Reinstall Silent OS\n"
    printf "\e[0m"
    read -n1 -s rec

    if [[ "$rec" != "1" && "$rec" != "2" && "$rec" != "3" ]]; then
        recovery
    elif [ $rec == "1" ]; then
    clear
printf "${RED}Restarting...${NOCOLOR}"
   sleep 4
   clear
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
e
ON

elif [ $rec == "2" ]; then
echo "" > CONFIG/MCMDB.txt
    clear
printf "${RED}Restarting...${NOCOLOR}"
   sleep 4
   clear
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
   echo "
      @@@@@@  @@@@@@ @@@       @@@@@@@@  @@    @@  @@@@@@@@@@
    @@         @@@   @@@       @@@       @@@@  @@     @@@
      @@@@     @@@   @@@       @@@@@@    @@  @@@@     @@@
          @@   @@@   @@@       @@@       @@    @@     @@@
    @@@@@@    @@@@@@ @@@@@@@@@ @@@@@@@@  @@    @@     @@@

                       @@@@@       @@@@@@@@
                    @@@@@@@@@@@  @@@@@@@@@@
                    @@@     @@@  @@
                    @@@     @@@    @@@@@
                    @@@     @@@         @@@
                    @@@@@@@@@@@  @@@@@@@@@@
                       @@@@@     @@@@@@@"
echo "Version 5.0, contact skibiditoiletcumrocket67 on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
ON

elif [ $rec == "3" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH
fi
}

BLUE='\033[0;34m'
   NOCOLOR='\033[0m'
echo "Making sure all logs are up to date..."
mkdir CONFIG
clear
echo "Making sure all logs are up to date..."
printf "${BLUE}#
"
echo "1/5 done."
clear
sleep 0.1
touch CONFIG/Event-Log.log
printf "${BLUE}##
"
echo "2/5 done."
clear
sleep 0.1
touch CONFIG/Error-Log.log
printf "${BLUE}###
"
echo "3/5 done."
clear
sleep 0.1
touch CONFIG/Info-Log.log
printf "${BLUE}####
"
echo "4/5 done."
clear
sleep 0.1
touch CONFIG/Warning-Log.log
printf "${BLUE}#####
"
echo "5/5 done, getting ready."
printf "${NOCOLOR}"
sleep 1
esh1="e.sh"
rm LOG.TXT
if [ -e "$esh1" ]; then
    esh=$(<"$esh1")
    fi

MCMDBON=0
 RED='\033[0;31m'
 BGB='\e[104m'
ft=1
Power=1
quote=\"start\"
quote2=\"list\"
function e() {
  if declare -f ON > /dev/null; then
      echo "Continue"
      else
        echo "The function that keeps the OS on was not found. 
Your OS is corrupted, please re-install it."
        read -p "Press Enter to continue..." 2>/dev/tty
        exit 0
      fi
   echo "Checking for MCMDB Mode..."
clear
MCMDB=0

if [ -e "$file2" ] && [ "$(wc -c < "$file2")" -gt 3 ]; then
    echo "MCMDB Mode is on. You will have more commands (Warning: May be unstable. These are beta features.)"
    read -p "Press Enter to continue..."  cmd0 2>/dev/tty 
    MCMDB=1
    clear
elif [ ! -e "$file2" ]; then 
    echo "MCMDB Configuration file was not found.
When the system boots it will be restored and you can turn it on."
    read -p "Press Enter to continue..." cmd0 2>/dev/tty
    clear
    elif [ -e "$file2" ] && [ ! "$(wc -c < "$file2")" -gt 3 ]; then
    echo "MDMDB Mode is turned off."
    read -p "Press Enter to continue..." cmd0 2>/dev/tty
    clear
    fi
  echo "Booting..."
  code=0
  trap 'code=$?; if [ $code -ne 0 ]; then crashSYS; fi' EXIT
read -n1 -t 1 cmd0 2>/dev/tty
sleep 1
  clear
if [ "$cmd0" == "M" ]; then
    sleep 1
    clear
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
    echo "Boot menu:"
    echo "1-Safe Mode"
    echo "2-Refresh all files (Except logs.)"
    echo '3-Bypass bootloader (Not reccommended!)'
    echo "4-Re-install Silent OS"
    echo "5-Continue booting"
    BOOTMENU=0
    read -n1 -t 999999999999999999999999 BOOTMENU
    if [ "$BOOTMENU" == "1" ]; then
        echo "<INFO> MCMDB disabled via boot menu. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
    echo "<INFO> Boot menu launched. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
        echo "" > CONFIG/MCMDB.txt
        MCMDB=0
        clear
    elif [ "$BOOTMENU" == "2" ]; then
    rm CONFIG/MCMDB.TXT
    touch CONFIG/MCMDB.TXT
    rm CONFIG/INFO.TXT
    touch CONFIG/INFO.TXT 
    clear
        elif [ "$BOOTMENU" == "3" ]; then
        clear
        Power=2
        ON
        elif [ "$BOOTMENU" == "4" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH
        elif [ "$BOOTMENU" == "5" ]; then
        clear
        else
        clear
        echo "Not an option!"
        sleep 1
        clear
    fi
fi
if [ ! -e "$file" ]; then
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
    printf "${RED}                                ......
                               :      :
                               :      :
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                                ......

                                ......
                               :      :
                               :      :
                                ......
MISSING OS CONFIGURATION INFO!
RECOVERING CONFIG FILES...

"
printf "${BLUE}-Note: If you have MCMDB Mode on this will turn it off and you will need to turn it back on.${RED}"
echo "" > CONFIG/INFO.TXT
echo "" > CONFIG/MCMDB.txt

sleep 2
echo "
Sucess!"
read -p "Press Enter to continue..." 2>/dev/tty
printf "${NOCOLOR}"
clear
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
   echo "
      @@@@@@  @@@@@@ @@@       @@@@@@@@  @@    @@  @@@@@@@@@@
    @@         @@@   @@@       @@@       @@@@  @@     @@@
      @@@@     @@@   @@@       @@@@@@    @@  @@@@     @@@
          @@   @@@   @@@       @@@       @@    @@     @@@
    @@@@@@    @@@@@@ @@@@@@@@@ @@@@@@@@  @@    @@     @@@

                       @@@@@       @@@@@@@@
                    @@@@@@@@@@@  @@@@@@@@@@
                    @@@     @@@  @@
                    @@@     @@@    @@@@@
                    @@@     @@@         @@@
                    @@@@@@@@@@@  @@@@@@@@@@
                       @@@@@     @@@@@@@"
echo "Version 5.0, contact skibiditoiletcumrocket67 on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
ON
clear




elif [ ! -e "$file2" ]; then
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<ERROR> One or more config file(s) was not found. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Error-Log.log
    printf "${RED}                                ......
                               :      :
                               :      :
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                               :      : 
                                ......

                                ......
                               :      :
                               :      :
                                ......
MISSING OS CONFIGURATION INFO!
RECOVERING CONFIG FILES...

"
printf "${BLUE}-Note: If you have MCMDB Mode on this will turn it off and you will need to turn it back on.${RED}"
echo "" > CONFIG/INFO.TXT
echo "" > CONFIG/MCMDB.txt
sleep 2
echo "
Sucess!"
read -p "Press Enter to continue..." 2>/dev/tty
printf "${NOCOLOR}"
clear
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
   echo "
      @@@@@@  @@@@@@ @@@       @@@@@@@@  @@    @@  @@@@@@@@@@
    @@         @@@   @@@       @@@       @@@@  @@     @@@
      @@@@     @@@   @@@       @@@@@@    @@  @@@@     @@@
          @@   @@@   @@@       @@@       @@    @@     @@@
    @@@@@@    @@@@@@ @@@@@@@@@ @@@@@@@@  @@    @@     @@@

                       @@@@@       @@@@@@@@
                    @@@@@@@@@@@  @@@@@@@@@@
                    @@@     @@@  @@
                    @@@     @@@    @@@@@
                    @@@     @@@         @@@
                    @@@@@@@@@@@  @@@@@@@@@@
                       @@@@@     @@@@@@@"
echo "Version 5.0, contact skibiditoiletcumrocket67 on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"
ON
fi

echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
./RECOVERY_SCRIPT.SH &
echo "
      @@@@@@  @@@@@@ @@@       @@@@@@@@  @@    @@  @@@@@@@@@@
    @@         @@@   @@@       @@@       @@@@  @@     @@@
      @@@@     @@@   @@@       @@@@@@    @@  @@@@     @@@
          @@   @@@   @@@       @@@       @@    @@     @@@
    @@@@@@    @@@@@@ @@@@@@@@@ @@@@@@@@  @@    @@     @@@

                       @@@@@       @@@@@@@@
                    @@@@@@@@@@@  @@@@@@@@@@
                    @@@     @@@  @@
                    @@@     @@@    @@@@@
                    @@@     @@@         @@@
                    @@@@@@@@@@@  @@@@@@@@@@
                       @@@@@     @@@@@@@"
echo "Version 5.0, contact skibiditoiletcumrocket67 on Discord for more details."
                       echo "Use command $quote2 for a list of commands
"

    Power=2
}
  function ON () {


sedfile=0
filewrite=0
writefile=0
einfo=0
signin=pass.txt
read -r -p "Command: " cmd 2>/dev/tty

  if [ $cmd == "list" ]; then
  if [ $MCMDB == 1 ]; then
  ./COMMANDS/listMCMDB.sh
else
./COMMANDS/list.sh
fi
elif [ $cmd == "log" ]; then
./COMMANDS/log.sh

elif [ $cmd == "errorlog" ]; then
./COMMANDS/errorlog.sh

elif [ $cmd == "infolog" ]; then
./COMMANDS/infolog.sh

elif [ $cmd == "warninglog" ]; then
./COMMANDS/warninglog.sh

elif [ $cmd == "clearlog" ]; then
./COMMANDS/clearlog.sh

elif [ $cmd == "update" ]; then
curl -O https://raw.githubusercontent.com/SilentTheOG/SILENTOS-SERVER/main/SERVER.TMP
touch FAILSAFE.SH
cat SERVER.TMP > e.sh | rm SERVER.TMP
echo "touch tmp.sh
echo "./e.sh" >> tmp.sh
./tmp.sh
rm tmp.sh
if [ -e "e.sh" ] && [ ! "$(wc -c < "e.sh")" -gt 3 ]; then
./RECOVERY_SCRIPT.SH
else
./e.sh
fi" > FAILSAFE.SH
./FAILSAFE.SH

elif [ $cmd == "testcrashfunc" ]; then
clear
crash



    if [ $? -ne 0 ]; then
        crash
        sleep 1
    fi
    
elif [[ $cmd == "KERNEL CRASH TEST 1" ]]; then
exit 1
elif [[ $cmd == "KERNEL CRASH TEST 2" ]]; then
exit 2
elif [[ $cmd == "KERNEL CRASH TEST CUSTOM" ]]; then
  KERNELCRASH=0
  read -p "What code? (NUMBER REQUIRED. DEFAULT IS 2.) " KERNELCRASH 2>/dev/tty
  if [[ $KERNELCRASH != 0 && ! -z $KERNELCRASH ]]; then
    exit $KERNELCRASH
  else
    exit 2
  fi
elif [ $cmd == "changelog" ]; then
./COMMANDS/changelog.sh


elif [ $cmd == "mcmdb" ]; then
echo "MCMDB MODE" > $file2
echo "Type "restart" to activate MCMDB Mode."
MCMDBON=1

elif [[ $cmd == *":"* ]]; then
    printf ""


elif [ $cmd == "app" ]; then
./COMMANDS/app.sh


elif [[ $cmd == "I AM SPEED" ]]; then
./"COMMANDS/IAMSPEED.sh"

elif [ $cmd == "restart" ] && [ $MCMDBON == 0 ];then
 clear
   printf  "${RED}Restarting...${NOCOLOR}"
   clear
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log
e
ON

elif [ $cmd == "restart" ] && [ $MCMDBON == 1 ]; then
e
ON
   echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Event-Log.log
echo "<INFO> System booted. [Time log was made: `date +%Y`-`date +%m`-`date +%d` `date +%H`:`date +%M`:`date +%S` ]
" >> CONFIG/Info-Log.log



elif [ $cmd == "powershell" ]; then
./COMMANDS/powershell.sh
elif [ $cmd == "clear" ]; then
    clear


    elif [ $cmd == "sed" ]; then
./COMMANDS/sed.sh

  elif [ $cmd == "quit" ]; then
    echo ""
    Power=0
  elif [ $cmd == "echo" ]; then
  read -p "What would you like to write? " "ECHO" 2>/dev/tty
    echo "$ECHO"
    Power=2
  



elif [ $cmd == "crashtest" ]; then
  clear
crash



else
fn="${cmd}.sh"
    if [ -e "COMMANDS/$fn" ]; then
    ./COMMANDS/$fn
else
    printf "$cmd is not a valid command.\n"
fi
  fi
  }

while [ $Power -eq 1 ]; do
    if declare -f e > /dev/null; then
      e
      break
    else
      echo "BOOT FAILED!"
      sleep 0.1
    fi

  echo "Your bootloader cannot load."
  echo "If the function is found, you will enter the OS."
  echo "Functionality will be limited."
  read -p "Press Enter to continue..." 2>/dev/tty

  if declare -f ON > /dev/null; then
    Power=2
    ON
    break
  else
    echo "The function that keeps the OS on was not found. 
Your OS is corrupted, please re-install it."
    read -p "Press Enter to continue..." 2>/dev/tty
    exit 0
  fi
done
  while [ $Power == 2 ]; do
  ON
done
